#================================================================================#
# This makefile created by B. Jonkman on 2-Apr-2013,                             #
# adapted from Crunch (M. Buhl on 25-Jan-2013).                                  #
# (c) 2013 National Renewable Energy Laboratory                                  #
#                                                                                #
# This makefile has been tested on Windows 7 with gfortran.                      #
# This makefile works with mingw32-make.exe.                                     #
#                                                                                #
# It was designed to be used with discon.f90 for the Bladed DLL Interface        #
#================================================================================#

#COMPILER options - gnu, intel, intelPhi
#COMPILER = intelPhi

#BUILD options - RELEASE, DEBUG
#BUILD = RELEASE

   # Name of compiler to use and flags to use.
ifeq ($(COMPILER),gnu)
	FC = gfortran
else ifeq ($(COMPILER),intel)
	FC      = ifort
else ifeq ($(COMPILER),intelPhi)
	FC      = ifort
endif

ifeq ($(BUILD),RELEASE)
	OPT_OPTIONS = -O2
else ifeq ($(BUILD),DEBUG)
	OPT_OPTIONS = -O0 -g
endif

   # 32-bit or 64-bit?
#BITS = 32
BITS = 64


   # Location of source files for the DLL.
   # You may need to change these for your DLL.

SOURCE_DIR     = 5MW_Baseline/ServoData/Source/

SOURCE_FILES = DISCON.f90

   # Name of compiler to use and flags to use.
ifeq ($(COMPILER),gnu)
     FFLAGS  = -m$(BITS) $(OPT_OPTIONS) -fbacktrace -ffree-line-length-none -x f95-cpp-input -DDOUBLE_PRECISION  -fdefault-real-8 -C
     LDFLAGS = -m$(BITS) $(OPT_OPTIONS) -fbacktrace -shared
else ifeq ($(COMPILER),intel)
     FFLAGS  = -fpp -threads $(OPT_OPTIONS) -fp-model precise -finline-functions -real-size 64 -double-size 128 -DDOUBLE_PRECISION 
     LDFLAGS = -fpp -threads $(OPT_OPTIONS) -fp-model precise -finline-functions -real-size 64 -double-size 128 -shared
else ifeq ($(COMPILER),intelPhi)
     FFLAGS  = -fpp -threads $(OPT_OPTIONS) -fp-model strict -mmic -mkl:sequential -finline-functions -real-size 64 -double-size 128 -DDOUBLE_PRECISION 
     LDFLAGS = -fpp -threads $(OPT_OPTIONS) -fp-model strict -mmic -mkl:sequential -finline-functions -real-size 64 -double-size 128 -shared
endif

# other useful gfortran options:
#  -fdefault-real-8 -fcheck=bounds -std=f2003 -O0 -v
# -Wl,--out-implib,DISCON.lib


   # Destination and RootName for executable

OUTPUT_NAME = libDISCON
DEST_DIR    = 5MW_Baseline/ServoData

   #==========================================================#
   # You should not need to change anything beyond this point #
   #==========================================================#

   # System-specific settings.

ifeq ($(OS),Windows_NT)
      # Windows
   DEL_CMD   = del
   SOBJ_EXT   = _gwin$(BITS).dll
   INTER_DIR = $(SOURCE_DIR)
   MD_CMD    = @mkdir
   OBJ_EXT   = .obj
   PATH_SEP  = \\
   SYS_FILE  = SysGnuWin
else

   FFLAGS := $(FFLAGS) -DIMPLICIT_DLLEXPORT

      # Linux
   DEL_CMD   = rm -f
   SOBJ_EXT   = _glin$(BITS).so
   INTER_DIR = $(SOURCE_DIR)
   MD_CMD    = @mkdir -p
   OBJ_EXT   = .o
   PATH_SEP  = /
   SYS_FILE  = SysGnuLinux

   UNAME := $(shell uname -s)

   ifneq ($(UNAME), Darwin)
      FFLAGS     := $(FFLAGS) -fPIC
      LDFLAGS    := $(LDFLAGS) -fPIC
   endif
endif

ifeq ($(COMPILER),gnu)
	MODULEFLAGS = 
else
	MODULEFLAGS = -module $(INTER_DIR)
endif

   # Rule to do everything.

all:     default
default:  $(DEST_DIR)/libDISCON$(SOBJ_EXT) 

   # General rules for compliling the files.

$(SOURCE_DIR)/DISCON$(OBJ_EXT): $(SOURCE_DIR)/DISCON.f90
	$(FC)  $(FFLAGS) -c $< -o $@ 

   # For linking 

$(DEST_DIR)/libDISCON$(SOBJ_EXT): $(SOURCE_DIR)/DISCON$(OBJ_EXT) 
	$(FC) $(LDFLAGS) -I $(SOURCE_DIR) -o $(DEST_DIR)/libDISCON$(SOBJ_EXT) $(SOURCE_DIR)/DISCON$(OBJ_EXT)

   # Cleanup afterwards.

clean:
	$(DEL_CMD) $(DEST_DIR)/libDISCON$(SOBJ_EXT)






